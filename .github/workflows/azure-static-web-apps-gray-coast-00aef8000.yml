name: Azure Static Web Apps CI/CD

on:
  push:
    branches:
      - deployment
  pull_request:
    types: [opened, synchronize, reopened, closed]
    branches:
      - deployment

jobs:
  build_and_deploy_job:
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.action != 'closed')
    runs-on: ubuntu-latest
    name: Build and Deploy Job
    environment: production  # ðŸ‘ˆ NEW: Links to GitHub Environment
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
          lfs: false

      - name: Create .env.production
        run: |
          echo VITE_API_BASE_URL=${{ secrets.API_BASE_URL }}" >> ./.env
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'  # ðŸ‘ˆ CHANGED: Updated from 18 to 20
          cache: 'npm'
          cache-dependency-path: 'package-lock.json'
      
      # ðŸ‘ˆ NEW: Generate runtime config from environment variables
      - name: Generate runtime config
        run: |
          mkdir -p public
          cat > public/config.json << EOF
          {
            "apiBaseUrl": "${{ vars.API_BASE_URL }}",
            "apiTimeout": ${{ vars.API_TIMEOUT || 30000 }},
            "debugApi": ${{ vars.DEBUG_API || false }},
            "appName": "${{ vars.APP_NAME || 'CalVent' }}",
            "appVersion": "${{ vars.APP_VERSION || '1.0.0' }}",
            "logLevel": "${{ vars.LOG_LEVEL || 'error' }}",
            "localStoragePrefix": "${{ vars.LOCAL_STORAGE_PREFIX || 'calvent_' }}",
            "tokenStorageKey": "${{ vars.TOKEN_STORAGE_KEY || 'AppUser' }}",
            "fallbackTokenKey": "${{ vars.FALLBACK_TOKEN_KEY || 'authToken' }}"
          }
          EOF
          echo "Generated runtime config:"
          cat public/config.json
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build application
        run: npm run build
      
      # ðŸ‘ˆ UPDATED: Copy both config files to build output
      - name: Copy config files to build output
        run: |
          # Copy runtime config
          cp public/config.json dist/
          
          # Copy staticwebapp config
          # Copy runtime config
          cp public/config.json dist/
          
          # Copy staticwebapp config
          if [ -f public/staticwebapp.config.json ]; then
            cp public/staticwebapp.config.json dist/
          elif [ -f staticwebapp.config.json ]; then
            cp staticwebapp.config.json dist/
          fi
          
          echo "Files in dist:"
          ls -la dist/
      
      - name: Build And Deploy
        id: builddeploy
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN_GRAY_COAST_00AEF8000 }}
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          action: "upload"
          app_location: "./dist"
          api_location: ""
          output_location: "dist"
          skip_app_build: false

  close_pull_request_job:
    if: github.event_name == 'pull_request' && github.event.action == 'closed'
    runs-on: ubuntu-latest
    name: Close Pull Request Job
    steps:
      - name: Close Pull Request
        id: closepullrequest
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN_GRAY_COAST_00AEF8000 }}

          action: "close"

